// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SodaMachine.Domain;

namespace SodaMachine.Domain.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20190129044731_AddModels")]
    partial class AddModels
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.2-rtm-30932")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SodaMachine.Domain.Models.Coin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CoinType");

                    b.Property<DateTime>("Created");

                    b.Property<bool>("IsAvalible");

                    b.Property<string>("Name");

                    b.Property<decimal>("Value");

                    b.HasKey("Id");

                    b.ToTable("Coin");
                });

            modelBuilder.Entity("SodaMachine.Domain.Models.CoinsInMachine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CoinId");

                    b.Property<int>("Count");

                    b.Property<DateTime>("Created");

                    b.Property<int>("SodaMachineId");

                    b.HasKey("Id");

                    b.HasIndex("CoinId");

                    b.HasIndex("SodaMachineId");

                    b.ToTable("CoinsInMachine");
                });

            modelBuilder.Entity("SodaMachine.Domain.Models.Soda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created");

                    b.Property<string>("Img");

                    b.Property<string>("Name");

                    b.Property<decimal>("Price");

                    b.HasKey("Id");

                    b.ToTable("Soda");
                });

            modelBuilder.Entity("SodaMachine.Domain.Models.SodaDevice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created");

                    b.HasKey("Id");

                    b.ToTable("SodaDevice");
                });

            modelBuilder.Entity("SodaMachine.Domain.Models.SodaInMachine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Count");

                    b.Property<DateTime>("Created");

                    b.Property<int>("SodaId");

                    b.Property<int>("SodaMachineId");

                    b.HasKey("Id");

                    b.HasIndex("SodaId");

                    b.HasIndex("SodaMachineId");

                    b.ToTable("SodaInMachine");
                });

            modelBuilder.Entity("SodaMachine.Domain.Models.CoinsInMachine", b =>
                {
                    b.HasOne("SodaMachine.Domain.Models.Coin", "Coin")
                        .WithMany()
                        .HasForeignKey("CoinId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SodaMachine.Domain.Models.SodaDevice", "SodaMachine")
                        .WithMany()
                        .HasForeignKey("SodaMachineId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SodaMachine.Domain.Models.SodaInMachine", b =>
                {
                    b.HasOne("SodaMachine.Domain.Models.Soda", "Soda")
                        .WithMany()
                        .HasForeignKey("SodaId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SodaMachine.Domain.Models.SodaDevice", "SodaMachine")
                        .WithMany()
                        .HasForeignKey("SodaMachineId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
